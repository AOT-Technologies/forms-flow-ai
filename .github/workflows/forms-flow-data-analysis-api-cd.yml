name: Push Forms flow Analysis API to registry

on:
  workflow_dispatch:
  push:
    branches: [ master, develop, release/* ]
    paths:
      - "forms-flow-data-analysis-api/**"
      - "VERSION"

defaults:
  run:
    shell: bash
    working-directory: ./forms-flow-data-analysis-api


jobs:
  build-and-push-image-to-dockerhub:
    if: github.repository == 'AOT-Technologies/forms-flow-ai'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: formsflow/forms-flow-data-analysis-api
            context: forms-flow-data-analysis-api
            dockerfile: Dockerfile
            name: forms-flow-data-analysis-api
    permissions:
      contents: read
      packages: write
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Set version
        if: ${{ github.ref != 'refs/heads/master' }}
        working-directory: .
        run: |
          VER=$(cat VERSION)
          echo "VERSION=$VER" >> $GITHUB_ENV
      - name: Set version
        if: ${{ github.ref == 'refs/heads/master' }}
        working-directory: .
        run: |
          VER=$(cat VERSION)
          VER=${VER/-alpha/''}
          echo "VERSION=$VER" >> $GITHUB_ENV
      
      - run: echo ${{ env.VERSION }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ matrix.image }}
          tags: ${{ env.VERSION }}

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          # registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.name }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.name }}
      
      - name: Build and push Docker image
        if: ${{ github.ref != 'refs/heads/master' }}
        uses: docker/build-push-action@v4
        with:
          context: forms-flow-data-analysis-api
          build-args: MODEL_ID=Seethal/sentiment_analysis_generic_dataset
          push: true
          platforms: linux/amd64,linux/arm64/v8
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Build and push Docker image
        if: ${{ github.ref == 'refs/heads/master' }}
        uses: docker/build-push-action@v4
        with:
          context: forms-flow-data-analysis-api
          build-args: MODEL_ID=Seethal/sentiment_analysis_generic_dataset
          push: true
          platforms: linux/amd64,linux/arm64/v8
          tags: ${{ steps.meta.outputs.tags }}, formsflow/forms-flow-data-analysis-api:latest
          labels: ${{ steps.meta.outputs.labels }}
      - name: Scan Docker image üê≥
        uses: snyk/actions/docker@master
        continue-on-error: true
        with:
          image: ${{ steps.meta.outputs.tags }}
          args: --severity-threshold=high --sarif-file-output=snyk.sarif
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: Upload Snyk report as sarif üì¶
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif
#####
#      - name: Set up AWS CLI
#        uses: aws-actions/configure-aws-credentials@v1
#        with:
#          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#          aws-region: ca-central-1  # Change this to your desired region
#      - name: Install kubectl
#        run: |
#          curl -LO "https://dl.k8s.io/release/$(curl -Ls https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
#          chmod +x kubectl
#          sudo mv kubectl /usr/local/bin/
#      - name: Update Kube config
#        run: aws eks update-kubeconfig --region ca-central-1 --name formsflow-eks-qa
#      - name: Deploy to eks
#        run: |
#            kubectl -n app2 patch deployment forms-flow-data-analysis-api -p '{"spec":{"template":{"spec":{"containers":[{"name":"forms-flow-data-analysis-api","image":"docker.io/formsflow/forms-flow-data-analysis-api:${{ env.VERSION }}"}]}}}}'        