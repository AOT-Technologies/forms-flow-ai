name: forms-flow-web-CD
on:
  workflow_dispatch:
  push:
    branches:
      - master
      - develop
      - release/*
    paths:
      - "forms-flow-web/**"
      - "VERSION"

defaults:
  run:
    shell: bash

jobs:
  build:
    if: github.repository == 'AOT-Technologies/forms-flow-ai'
    name: Build and push artifacts to s3
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16.20.0'
      - run: npm ci
        working-directory: ./forms-flow-web
      - run: npm run build
        working-directory: ./forms-flow-web
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.REGION }}
      - name: Set version
        if: ${{ github.ref != 'refs/heads/master' }}
        working-directory: .
        run: |
          VER=$(cat VERSION)
          echo "VERSION=$VER" >> $GITHUB_ENV
          
      - name: Set version
        if: ${{ github.ref == 'refs/heads/master' }}
        working-directory: .
        run: |
          VER=$(cat VERSION)
          VER=${VER/-alpha/''}
          echo "VERSION=$VER" >> $GITHUB_ENV
      - run: echo ${{ env.VERSION }}
      - run: npm ci
        working-directory: ./forms-flow-web/scripts
      - run: node index
        env:
          BUCKET: ${{ secrets.BUCKET }}
          VERSION: ${{ env.VERSION }}
        working-directory: ./forms-flow-web/scripts

  zap_scan:
    runs-on: ubuntu-latest
    name: Scan the web application
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Check DEV URL
        id: check-dev-url
        run: |
          DEV_URL="${{ secrets.WEB_DEV_URL }}"
          
          echo "Checking DEV URL..."
          RESPONSE_DEV=$(curl -s -o /dev/null -w "%{http_code}" "$DEV_URL" || echo "Failed")

          if [ "$RESPONSE_DEV" -eq 200 ]; then
            echo "DEV URL is up"
            echo "WEB_TARGET_URL=$DEV_URL" >> $GITHUB_ENV
            echo "URL_STATUS=success" >> $GITHUB_ENV
          else
            echo "DEV URL is down. Exiting workflow."
            echo "URL_STATUS=failure" >> $GITHUB_ENV
            exit 0
          fi

      - name: Print selected target
        if: env.URL_STATUS == 'success'
        run: |
          echo "Selected target URL is: ${{ env.WEB_TARGET_URL }}"

      - name: ZAP Scan
        if: env.URL_STATUS == 'success'
        uses: zaproxy/action-full-scan@v0.8.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          target: ${{ env.WEB_TARGET_URL }}
          rules_file_name: '.zap/rules.tsv'

      - name: Install AWS CLI
        if: env.URL_STATUS == 'success'
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli
          
      - name: Configure AWS credentials
        if: env.URL_STATUS == 'success'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.REGION }}

      - name: Upload ZAP Report to S3
        if: env.URL_STATUS == 'success'
        run: |
          aws s3 cp report_html.html s3://zap-report-formsflow/zap-reports/zap-report-$(date +%Y-%m-%d_%H-%M-%S).html
