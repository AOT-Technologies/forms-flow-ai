apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: redis_replica_set
  annotations:
    description: ''
labels:
  app: redis
objects:
  - apiVersion: v1
    kind: ConfigMap
    metadata:
      name: redis
      labels:
        app: redis
    data:
      fix-ip.sh: |
        #!/bin/sh
        CLUSTER_CONFIG="/data/nodes.conf"
        if [ -f ${CLUSTER_CONFIG} ]; then
          if [ -z "${POD_IP}" ]; then
            echo "Unable to determine Pod IP address!"
            exit 1
          fi
          echo "Updating my IP to ${POD_IP} in ${CLUSTER_CONFIG}"
          sed -i.bak -e "/myself/ s/[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/${POD_IP}/" ${CLUSTER_CONFIG}
        fi
        exec "$@"
      redis.conf: |+
        cluster-enabled yes
        cluster-require-full-coverage no
        cluster-node-timeout 15000
        cluster-config-file /data/nodes.conf
        cluster-migration-barrier 1
        appendonly yes
        protected-mode no

  - apiVersion: v1
    kind: Service
    metadata:
      name: redis
      labels:
        app: redis
    spec:
      ports:
        - port: 6379
          targetPort: 6379
          name: client
        - port: 16379
          targetPort: 16379
          name: gossip
      clusterIP: None
      selector:
        app: redis

  - apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      name: redis
      labels:
        app: redis
    spec:
      serviceName: redis
      replicas: 6
      selector:
        matchLabels:
          app: redis
      template:
        metadata:
          labels:
            app: redis
        spec:
          containers:
            - name: redis
              image: redis:5.0-rc
              ports:
                - containerPort: 6379
                  name: client
                - containerPort: 16379
                  name: gossip
              command: ["/conf/fix-ip.sh", "redis-server", "/conf/redis.conf"]
              readinessProbe:
                exec:
                  command:
                    - sh
                    - -c
                    - "redis-cli -h $(hostname) ping"
                initialDelaySeconds: 15
                timeoutSeconds: 5
              livenessProbe:
                exec:
                  command:
                    - sh
                    - -c
                    - "redis-cli -h $(hostname) ping"
                initialDelaySeconds: 20
                periodSeconds: 3
              env:
                - name: POD_IP
                  valueFrom:
                    fieldRef:
                      fieldPath: status.podIP
              volumeMounts:
                - name: conf
                  mountPath: /conf
                  readOnly: false
                - name: data
                  mountPath: /data
                  readOnly: false
              resources:
                requests:
                  cpu: "10m"
                  memory: "50Mi"
                limits:
                  cpu: "50m"
                  memory: "250Mi"
          volumes:
            - name: conf
              configMap:
                name: redis
                defaultMode: 0755
      volumeClaimTemplates:
        - metadata:
            name: data
            labels:
              name: redis
          spec:
            accessModes: [ "ReadWriteOnce" ]
            resources:
              requests:
                storage: 100Mi