---
kind: Template
apiVersion: v1
metadata:
  annotations:
    description: Deployment template for a Sentiment Analysis job.
    tags: "${NAME}"
  name: "${NAME}-deploy"
objects:
- kind: Secret
  apiVersion: v1
  metadata:
    name: "${NAME}"
    labels:
      app: "${NAME}"
  stringData:
      DATABASE_HOST: "${DATABASE_HOST}"
      DATABASE_PORT: "${DATABASE_PORT}"
      DATABASE_NAME: "${DATABASE_NAME}"
      DATABASE_USERNAME: "${DATABASE_USERNAME}"
      DATABASE_PASSWORD: "${DATABASE_PASSWORD}"
      DATABASE_TABLE_NAME: "${DATABASE_TABLE_NAME}"
      DATABASE_INPUT_COLUMN: "${DATABASE_INPUT_COLUMN}"
      DATABASE_OUTPUT_COLUMN: "${DATABASE_OUTPUT_COLUMN}"
      DBMS: "${DBMS}"
      MODEL_ID: "${MODEL_ID}"
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: "${NAME}-cron-configuration"
    labels:
      app: "${NAME}"
  data:
      crontab: ""

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${NAME}"
    labels:
      app: "${NAME}"
      app-group: "${APP_GROUP}"
      template: "${NAME}-deploy"
  spec:
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 600
        maxUnavailable: 25%
        maxSurge: 25%
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - "${NAME}"
        from:
          kind: ImageStreamTag
          namespace: "${IMAGE_NAMESPACE}"
          name: "${NAME}:${TAG_NAME}"
    - type: ConfigChange
    replicas: 1
    test: false
    selector:
      app: "${NAME}"
      deploymentconfig: "${NAME}"
    template:
      metadata:
        labels:
          app: "${NAME}"
          app-group: "${APP_GROUP}"
          deploymentconfig: "${NAME}"
          template: "${NAME}-deploy"
      spec:
        volumes:
        - name: cron-config
          configMap:
            name: "${NAME}-cron-configuration"
            defaultMode: 420
        containers:
        - name: "${NAME}"
          image: docker-registry.default.svc:5000/${IMAGE_NAMESPACE}/${NAME}:${TAG_NAME}
          ports:
          - containerPort: 8080
            protocol: TCP
          volumeMounts:
          - name: cron-config
            readOnly: true
            mountPath: "/sentiment-analysis/cron/"
          env:
          - name: DATABASE_USERNAME
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: DATABASE_USERNAME
          - name: DATABASE_PASSWORD
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: DATABASE_PASSWORD
          - name: DATABASE_NAME
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: DATABASE_NAME
          - name: DATABASE_HOST
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: DATABASE_HOST
          - name: DATABASE_PORT
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: DATABASE_PORT
          - name: DATABASE_TABLE_NAME
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: DATABASE_TABLE_NAME
          - name: DATABASE_INPUT_COLUMN
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: DATABASE_INPUT_COLUMN
          - name: DBMS
            valueFrom:
              secretKeyRef:
                name: "${NAME}"
                key: DBMS
          - name: MODEL_ID
            valueFrom:
              configMapKeyRef:
                key: MODEL_ID
                name: ${FORMSFLOW_CONFIG_NAME}-config

          resources:
            requests:
              cpu: "${CPU_REQUEST}"
              memory: "${MEMORY_REQUEST}"
            limits:
              cpu: "${CPU_LIMIT}"
              memory: "${MEMORY_LIMIT}"
          terminationMessagePath: "/dev/termination-log"
          terminationMessagePolicy: File
          imagePullPolicy: Always
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        dnsPolicy: ClusterFirst
        securityContext: {}
        schedulerName: default-scheduler
- kind: Service
  apiVersion: v1
  metadata:
    name: "${NAME}"
    creationTimestamp:
    labels:
      app: "${NAME}"
      app-group: "${APP_GROUP}"
      template: "${NAME}-deploy"
  spec:
    ports:
    - name: 8080-tcp
      protocol: TCP
      port: 8080
      targetPort: 8080
    selector:
      deploymentconfig: "${NAME}"
    type: ClusterIP
    sessionAffinity: None
  status:
    loadBalancer: {}
parameters:
- name: NAME
  displayName: Name
  description: The name assigned to all of the OpenShift resources associated to the
    server instance.
  required: true
  value: formsflow-sentiment-analysis
- name: APP_GROUP
  displayName: App Group
  description: The name assigned to all of the deployments in this project.
  required: true
  value: formsflow.ai
- name: IMAGE_NAMESPACE
  displayName: Image Namespace
  required: true
  description: The namespace of the OpenShift project containing the imagestream for
    the application.
  value: ''
- name: TAG_NAME
  displayName: Environment TAG name
  description: The TAG name for this environment, e.g., dev, test, prod
  required: true
  value: dev
- name: CPU_REQUEST
  displayName: Resources CPU Request
  description: The resources CPU request (in cores) for this build.
  required: true
  value: 100m
- name: CPU_LIMIT
  displayName: Resources CPU Limit
  description: The resources CPU limit (in cores) for this build.
  required: true
  value: 750m
- name: MEMORY_REQUEST
  displayName: Resources Memory Request
  description: The resources Memory request (in Mi, Gi, etc) for this build.
  required: true
  value: 100Mi
- name: MEMORY_LIMIT
  displayName: Resources Memory Limit
  description: The resources Memory limit (in Mi, Gi, etc) for this build.
  required: true
  value: 2Gi
- name: REPLICAS
  displayName: The number of replicas to run
  description: The number of replicas to run in this environment.
  required: true
  value: '1'
- name: DATABASE_HOST
  displayName: Database host
  description: Database host name
  required: true
  value: ''
- name: DATABASE_PORT
  displayName: Database port
  description: Database port number
  required: true
  value: ''
- name: DATABASE_NAME
  displayName: Database name
  description: Database name
  required: true
  value: ''
- name: DATABASE_USERNAME
  displayName: Database user name
  description: Database user name
  required: true
  value: ''
- name: DATABASE_PASSWORD
  displayName: Database password
  description: Database password
  required: true
  value: ''
- name: DATABASE_TABLE_NAME
  displayName: Database table name
  description: Database table against which sentiment analysis to be executed.
  required: true
  value: ''
- name: DATABASE_INPUT_COLUMN
  displayName: Database table input column name
  description: Database table column which holds input for sentiment analysis
  required: true
  value: ''
- name: DATABASE_OUTPUT_COLUMN
  displayName: Database table output column name
  description: Database table output column which stores the sentiment analysis response
  required: true
  value: ''
- name: DBMS
  displayName: Database type to use
  description: Database type to use. SQL_SERVER or POSTGRES
  required: true
  value: 'SQL_SERVER'
- name: MODEL_ID
  displayName: Model ID for sentiment analysis
  description: Model ID for sentiment analysis
  required: true

