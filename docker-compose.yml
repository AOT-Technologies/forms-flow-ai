# Author: Gurumoorthy Mohan
version: "3.7"

services:

  forms-flow-bpm-db:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /data/postgres
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./postgres:/data/postgres
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - forms-flow-bpm-network


  forms-flow-bpm:
    build:
      context: ./forms-flow-bpm/
      dockerfile: Dockerfile
    restart: always
    links:
      - forms-flow-bpm-db
    ports:
      - '8000:8443'
    environment:
      - KEYCLOAK_URL=${KEYCLOAK_URL}
      - KEYCLOAK_URL_REALM=${KEYCLOAK_URL_REALM}
      - KEYCLOAK_CLIENTID=${KEYCLOAK_CLIENTID}
      - KEYCLOAK_CLIENTSECRET=${KEYCLOAK_CLIENTSECRET}
      - JDBC_URL=${JDBC_URL}
      - JDBC_USER=${JDBC_USER}
      - JDBC_PASSWORD=${JDBC_PASSWORD}
      - JDBC_DRIVER=${JDBC_DRIVER}
      - APP_SECURITY_ORIGIN=${APP_SECURITY_ORIGIN}
    volumes:
      - /home/dev/certs/bpm1.aot-technologies.com:/certs
    networks:
      - forms-flow-bpm-network

  forms-flow-forms-db:
    image: mongo:4.1
    restart: always
    hostname: forms-flow-forms-db
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGO_REPLICA_SET_NAME: ${MONGO_REPLICA_SET_NAME}
    volumes:
      - ./mongodb/data/db/:/data/db/
      - ./mongodb/data/log/:/var/log/mongodb/
      - ./mongodb/mongod.conf:/etc/mongod.conf
      - ./mongodb/initdb.d/:/docker-entrypoint-initdb.d/
    command: [ "--replSet", "${MONGO_REPLICA_SET_NAME}", "--bind_ip_all"]
    networks:
      - forms-flow-forms-network

  forms-flow-forms:
    build:
      context: ./forms-flow-forms/
      dockerfile: Dockerfile
    # The app will restart until Mongo is listening
    restart: always
    links:
      - forms-flow-forms-db
    ports:
      - "3001:3001"
    # The application wants to download things to the local directory
    # TODO: really wish I could mount this as read-only
    volumes:
      - ./:/app:rw
    environment:
      DEBUG: formio:*
      NODE_CONFIG: '{"mongo": "mongodb://formio:aot123@forms-flow-forms-db:27017/formio?replicaSet=rs0"}'
      ROOT_EMAIL: ${ROOT_EMAIL}
      ROOT_PASSWORD: ${ROOT_PASSWORD}
    stdin_open: true  # -i
    tty: true         # -t
    networks:
      - forms-flow-forms-network

  forms-flow-ai:
    build:
      context: ./forms-flow-web/
      dockerfile: Dockerfile
    volumes:
      - '.:/app'
      - '/app/node_modules'
    ports:
      - '3000:3000'
    tty: true
    environment:
      - NODE_ENV=${NODE_ENV}
      - REACT_APP_CLIENT_ROLE=${REACT_APP_CLIENT_ROLE}
      - REACT_APP_STAFF_REVIEWER_ROLE=${REACT_APP_STAFF_REVIEWER_ROLE}
      - REACT_APP_STAFF_DESIGNER_ROLE=${REACT_APP_STAFF_DESIGNER_ROLE}
      - REACT_APP_CLIENT_ID=${REACT_APP_CLIENT_ID}
      - REACT_APP_STAFF_REVIEWER_ID=${REACT_APP_STAFF_REVIEWER_ID}
      - REACT_APP_STAFF_DESIGNER_ID=${REACT_APP_STAFF_DESIGNER_ID}
      - REACT_APP_USER_RESOURCE_FORM_ID=${REACT_APP_USER_RESOURCE_FORM_ID}
      - REACT_APP_API_SERVER_URL=${REACT_APP_API_SERVER_URL}
      - REACT_APP_API_PROJECT_URL=${REACT_APP_API_PROJECT_URL}
      - REACT_APP_KEYCLOAK_JSON_DEV=${REACT_APP_KEYCLOAK_JSON_DEV}
      - REACT_APP_KEYCLOAK_CLIENT=${REACT_APP_KEYCLOAK_CLIENT}
      - REACT_APP_BPM_API_BASE=${REACT_APP_BPM_API_BASE}
      - REACT_APP_BPM_TOKEN_API=${REACT_APP_BPM_TOKEN_API}
      - REACT_APP_BPM_CLIENT_ID=${REACT_APP_BPM_CLIENT_ID}
      - REACT_APP_KEYCLOAK_BPM_CLIENT=${REACT_APP_KEYCLOAK_BPM_CLIENT}
      - REACT_APP_ANONYMOUS_ID=${REACT_APP_ANONYMOUS_ID}
      - REACT_APP_EMAIL_SUBMISSION_GROUP=${REACT_APP_EMAIL_SUBMISSION_GROUP}

    networks:
      - forms-flow-web-network

  forms-flow-webapi-db:
    image: postgres
    environment:
      POSTGRES_USER: ${WEB_API_POSTGRES_USER}
      POSTGRES_PASSWORD: ${WEB_API_POSTGRES_PASSWORD}
      POSTGRES_DB: ${WEB_API_POSTGRES_DB}
      POSTGRES_HOST_AUTH_METHOD: "trust"
    ports:
      - "6432:5432"
    restart: unless-stopped
    volumes:
      - ./postgres/webapi:/data/postgres
    networks:
      - forms-flow-webapi-network

  forms-flow-webapi:
    build:
      context: ./forms-flow-webapi/
      dockerfile: Dockerfile
    restart: unless-stopped
    links:
      - forms-flow-webapi-db
    ports:
      - '5000:5000'
    volumes:
      - ./:/app:rw
    environment:
      DATABASE_URL: ${WEB_API_DATABASE_URL}
    stdin_open: true  # -i
    tty: true         # -t
    networks:
      - forms-flow-webapi-network
  
  nginx:
    image: nginx:1.15-alpine
    ports:
      - "443:443"
    volumes:
      - ./:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - /home/dev/certs:/etc/nginx/certs
    restart: unless-stopped
    tty: true
    networks:
      - forms-flow-web-network

networks:
  forms-flow-webapi-network:
  forms-flow-forms-network:
  forms-flow-bpm-network:
  forms-flow-web-network:
    driver: "bridge"

volumes:
  mdb-data:
  postgres:
