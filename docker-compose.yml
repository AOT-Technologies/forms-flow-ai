# Author: Gurumoorthy Mohan
version: "3.7"

services:

  forms-flow-bpm:
    build:
      context: ./forms-flow-bpm/
      dockerfile: Dockerfile
    ports:
      - '8000:8080'
    environment:
      - KEYCLOAK_URL=${KEYCLOAK_URL}
      - KEYCLOAK_URL_REALM=${KEYCLOAK_URL_REALM}
      - KEYCLOAK_CLIENTID=${KEYCLOAK_CLIENTID}
      - KEYCLOAK_CLIENTSECRET=${KEYCLOAK_CLIENTSECRET}
    volumes:
      - /home/dev/certs/bpm1.aot-technologies.com:/certs
    networks:
      - forms-flow-bpm-network

  mongo:
    image: mongo:4.1
    restart: always
    ports:
      - "27018:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
    volumes:
      - mdb-data:/data/db

  forms-flow-forms:
    build:
      context: ./forms-flow-forms/
      dockerfile: Dockerfile
    # The app will restart until Mongo is listening
    restart: always
    links:
      - mongo
    ports:
      - "3001:3001"
    # The application wants to download things to the local directory
    # TODO: really wish I could mount this as read-only
    volumes:
      - ./:/app:rw
    environment:
      DEBUG: formio:*
      NODE_CONFIG: '{"mongo": "mongodb://mongo:27017/formio"}'
      ROOT_EMAIL: ${ROOT_EMAIL}
      ROOT_PASSWORD: ${ROOT_PASSWORD}
    stdin_open: true  # -i
    tty: true         # -t

  forms-flow-web:
    build:
      context: ./forms-flow-web/
      dockerfile: Dockerfile
    volumes:
      - '.:/app'
      - '/app/node_modules'
    ports:
      - '3000:3000'
    tty: true
    environment:
      - NODE_ENV=${NODE_ENV}
      - REACT_APP_CLIENT_ID=${REACT_APP_CLIENT_ID}
      - REACT_APP_STAFF_REVIEWER_ID=${REACT_APP_STAFF_REVIEWER_ID}
      - REACT_APP_STAFF_DESIGNER_ID=${REACT_APP_STAFF_DESIGNER_ID}
      - REACT_APP_USER_RESOURCE_FORM_ID=${REACT_APP_USER_RESOURCE_FORM_ID}
      - REACT_APP_API_SERVER_URL=${REACT_APP_API_SERVER_URL}
      - REACT_APP_API_PROJECT_URL=${REACT_APP_API_PROJECT_URL}
    networks:
      - forms-flow-web-network

  nginx:
    image: nginx:1.15-alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
      - /home/dev/certs:/etc/nginx/certs
    restart: unless-stopped
    tty: true
    networks:
      - forms-flow-web-network

networks:
  forms-flow-bpm-network:
  forms-flow-web-network:
    driver: "bridge"

volumes:
  mdb-data: