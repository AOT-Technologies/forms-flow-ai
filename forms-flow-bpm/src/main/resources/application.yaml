# Set variables
spring.config.import: "optional:file:.env[.properties]"

keycloak.url: ${KEYCLOAK_URL}
keycloak.url.realm: ${KEYCLOAK_URL_REALM}
keycloak.clientId: ${KEYCLOAK_CLIENTID}
keycloak.clientSecret: ${KEYCLOAK_CLIENTSECRET}

server:
  port: 8080
  servlet:
    context-path: /camunda
    session:
      cookie:
        secure: true
        http-only: true
        max-age: 1800

formsflow.ai:
  forms:
    enableCustomSubmission: ${CUSTOM_SUBMISSION_ENABLED:false}
    custom_submission:
      url: ${CUSTOM_SUBMISSION_URL}
  api:
    url: ${FORMSFLOW_API_URL}
  analysis:
    url: ${DATA_ANALYSIS_URL}
  formio:
    url: ${FORMIO_URL}
    security:
      accessTokenUri: ${FORMIO_URL}/user/login
      username: ${FORMIO_ROOT_EMAIL}
      password: ${FORMIO_ROOT_PASSWORD}
  camunda:
    spring:
      webclient:
        maxInMemorySize: ${DATA_BUFFER_SIZE:2}
        connectionTimeout: ${BPM_CLIENT_CONN_TIMEOUT:5000}


camunda.bpm:
  job-execution:
    enabled: true
  history-level: ${CAMUNDA_BPM_HISTORY_LEVEL:none}
  authorization:
    enabled: ${CAMUNDA_AUTHORIZATION_FLAG:true}
    authorization-check-revokes: ${CAMUNDA_AUTHORIZATION_REVOKE_CHECK_FLAG:auto}
  filter:
    create: All tasks
  webapp:
    application-path: /
    csrf:
      enable-secure-cookie: true
    header-security:
      content-security-policy-disabled: false
      content-security-policy-value:  base-uri 'self';
        img-src 'self' data:;
        block-all-mixed-content;
        form-action 'self';
        frame-ancestors 'none';
        object-src 'none'


spring:
  datasource:
    jdbc-url : ${CAMUNDA_JDBC_URL:jdbc:h2:./camunda-db;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE}
    username: ${CAMUNDA_JDBC_USER:sa}
    password: ${CAMUNDA_JDBC_PASSWORD:sa}
    driverClassName: ${CAMUNDA_JDBC_DRIVER:org.h2.Driver}
    type: com.zaxxer.hikari.HikariDataSource
    minimum-idle: 10
    maximumPoolSize: ${CAMUNDA_HIKARI_MAX_POOLSIZE:30}
    connectionTimeout: ${CAMUNDA_HIKARI_CONN_TIMEOUT:30000}
    idleTimeout: ${CAMUNDA_HIKARI_IDLE_TIMEOUT:600000}
    validationTimeout: ${CAMUNDA_HIKARI_VALID_TIMEOUT:5000}
  security:
    oauth2:
      client:
        registration:
          keycloak:
            provider: keycloak
            client-id: ${keycloak.clientId}
            client-secret: ${keycloak.clientSecret}
            redirect-uri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
            scope:
              - openid
              - profile
              - email
            authorizationGrantType: authorization_code
          keycloak-client:
            provider: keycloak
            client-id: ${keycloak.clientId}
            client-secret: ${keycloak.clientSecret}
            authorizationGrantType: client_credentials
        provider:
          keycloak:
            authorization-uri: ${keycloak.url}/auth/realms/${keycloak.url.realm}/protocol/openid-connect/auth
            token-uri: ${keycloak.url}/auth/realms/${keycloak.url.realm}/protocol/openid-connect/token
            user-info-uri: ${keycloak.url}/auth/realms/${keycloak.url.realm}/protocol/openid-connect/userinfo
            user-name-attribute: preferred_username
            jwk-set-uri: ${keycloak.url}/auth/realms/${keycloak.url.realm}/protocol/openid-connect/certs
            issuer-uri: ${keycloak.url}/auth/realms/${keycloak.url.realm}
      resourceserver:
        jwt:
          issuer-uri: ${keycloak.url}/auth/realms/${keycloak.url.realm}
  main:
    allow-bean-definition-overriding: true


# Camunda Rest API
rest.security:
  enabled: true
  provider: keycloak
  required-audience: camunda-rest-api


plugin.identity.keycloak.rest:
  userNameClaim: preferred_username
  authorityPrefix: "ROLE_"
  authorityAttributeName: groupIds

plugin.identity.keycloak:
  keycloakIssuerUrl: ${keycloak.url}/auth/realms/${keycloak.url.realm}
  keycloakAdminUrl: ${keycloak.url}/auth/admin/realms/${keycloak.url.realm}
  clientId: ${keycloak.clientId}
  clientSecret: ${keycloak.clientSecret}
  useEmailAsCamundaUserId: false
  useUsernameAsCamundaUserId: true
  useGroupPathAsCamundaGroupId: true
  administratorGroupName: camunda-admin
  disableSSLCertificateValidation: true
  maxResultSize: ${IDENTITY_PROVIDER_MAX_RESULT_SIZE:250}
  webClientId: ${KEYCLOAK_WEB_CLIENTID:}
  enableClientAuth: ${KEYCLOAK_ENABLE_CLIENT_AUTH:false}
  enableMultiTenancy: ${MULTI_TENANCY_ENABLED:false}
  formsFlowAdminUrl: ${FORMSFLOW_ADMIN_URL:}

app.security.origin: ${APP_SECURITY_ORIGIN}

# Allowed possible values for WEBSOCKET_MESSAGE_EVENTS:  DEFAULT, ALL or filtered values from (create,update,assignment,timeout,complete) as comma separated
# DEFAULT maps to events: create,assignment,complete
websocket:
  security:
    origin: ${WEBSOCKET_SECURITY_ORIGIN}
    secretKey: ${WEBSOCKET_ENCRYPT_KEY}
  messageType: ${WEBSOCKET_MESSAGE_TYPE}
  messageEvents: ${WEBSOCKET_MESSAGE_EVENTS:DEFAULT}
  messageBroker:
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    passcode: ${REDIS_PASSCODE:changeme}
  enableRedis: ${REDIS_ENABLED:false}

# disable redis
#spring.data.redis.repositories.enabled: false
#spring.autoconfigure.exclude:
#  - org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration

management:
  health:
    db:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "health,info,loggers"
  endpoint:
    loggers:
      enabled: true

info:
  app:
    name: "Camunda"
    description: "formsflow.ai Engine"
    version: "7.17"
  java:
    version: "17"


logging:
  level:
    org.springframework.security: ${CAMUNDA_APP_ROOT_LOG_FLAG}
    org.springframework.web: ${CAMUNDA_APP_ROOT_LOG_FLAG}
    org.springframework.jdbc: ${CAMUNDA_APP_ROOT_LOG_FLAG}
    org.camunda.bpm: ${CAMUNDA_APP_ROOT_LOG_FLAG}