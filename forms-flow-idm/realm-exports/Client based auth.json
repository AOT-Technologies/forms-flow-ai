{
   "roles":{
      "client":{
         "{project-unique-key}-forms-flow-analytics":[
            
         ],
         "{project-unique-key}-forms-flow-web":[
            {
                "name": "formsflow-reviewer",
                "clientRole": true,
                "attributes": {}
            },
            {
                "name": "formsflow-client",
                "clientRole": true,
                "attributes": {}
            },
            {
                "name": "formsflow-designer",
                "clientRole": true,
                "attributes": {}
            }
         ],
         "{project-unique-key}-forms-flow-bpm":[
            
         ]
      }
   },
   "users":[
      {
         "username":"service-account-{project-unique-key}-forms-flow-bpm",
         "enabled":true,
         "totp":false,
         "emailVerified":false,
         "serviceAccountClientId":"{project-unique-key}-forms-flow-bpm",
         "disableableCredentialTypes":[
            
         ],
         "requiredActions":[
            
         ],
         "clientRoles":{
            "realm-management":[
               "view-users",
               "query-users",
               "manage-clients",
               "query-clients",
               "manage-users"
            ],
            "{project-unique-key}-forms-flow-web":[
               "formsflow-reviewer",
               "camunda-admin"
            ]
         },
         "notBefore":0,
         "groups":[
            
         ]
      }
   ],
   "clients":[
      {
         "clientId":"{project-unique-key}-forms-flow-analytics",
         "description":"Redash-Analytics",
         "adminUrl":"{analytics_url}/saml/callback?org_slug=default",
         "surrogateAuthRequired":false,
         "enabled":true,
         "alwaysDisplayInConsole":false,
         "clientAuthenticatorType":"client-secret",
         "redirectUris":[
            "{analytics_url}/*"
         ],
         "webOrigins":[
            
         ],
         "notBefore":0,
         "bearerOnly":false,
         "consentRequired":false,
         "standardFlowEnabled":true,
         "implicitFlowEnabled":false,
         "directAccessGrantsEnabled":true,
         "serviceAccountsEnabled":false,
         "publicClient":true,
         "frontchannelLogout":false,
         "protocol":"saml",
         "attributes":{
            "saml.force.post.binding":"false",
            "saml.multivalued.roles":"false",
            "oauth2.device.authorization.grant.enabled":"false",
            "backchannel.logout.revoke.offline.tokens":"false",
            "saml.server.signature.keyinfo.ext":"false",
            "use.refresh.tokens":"true",
            "oidc.ciba.grant.enabled":"false",
            "backchannel.logout.session.required":"false",
            "saml.signature.algorithm":"RSA_SHA256",
            "client_credentials.use_refresh_token":"false",
            "saml.client.signature":"false",
            "saml.assertion.signature":"true",
            "id.token.as.detached.signature":"false",
            "saml.encrypt":"false",
            "saml.server.signature":"false",
            "exclude.session.state.from.auth.response":"false",
            "saml.artifact.binding.identifier":"45RbBjdYkPNyr7MamFji+v7T9n4=",
            "saml.artifact.binding":"false",
            "saml_force_name_id_format":"false",
            "tls.client.certificate.bound.access.tokens":"false",
            "saml.authnstatement":"true",
            "display.on.consent.screen":"false",
            "saml_name_id_format":"username",
            "saml.onetimeuse.condition":"false",
            "saml_signature_canonicalization_method":"http://www.w3.org/2001/10/xml-exc-c14n#WithComments"
         },
         "authenticationFlowBindingOverrides":{
            
         },
         "fullScopeAllowed":true,
         "nodeReRegistrationTimeout":-1,
         "protocolMappers":[
            {
               "name":"X500 surname",
               "protocol":"saml",
               "protocolMapper":"saml-user-property-mapper",
               "consentRequired":false,
               "config":{
                  "user.attribute":"lastName",
                  "friendly.name":"LastName",
                  "attribute.name":"LastName"
               }
            },
            {
               "name":"X500 givenName",
               "protocol":"saml",
               "protocolMapper":"saml-user-property-mapper",
               "consentRequired":false,
               "config":{
                  "user.attribute":"firstName",
                  "friendly.name":"FirstName",
                  "attribute.name":"FirstName"
               }
            }
         ],
         "defaultClientScopes":[
            "role_list"
         ],
         "optionalClientScopes":[
            
         ]
      },
      {
         "clientId":"{project-unique-key}-forms-flow-bpm",
         "description":"Camunda Process Engine Components",
         "surrogateAuthRequired":false,
         "enabled":true,
         "alwaysDisplayInConsole":false,
         "clientAuthenticatorType":"client-secret",
         "redirectUris":[
            "{camunda_url}/*"
         ],
         "webOrigins":[
            "*"
         ],
         "notBefore":0,
         "bearerOnly":false,
         "consentRequired":false,
         "standardFlowEnabled":true,
         "implicitFlowEnabled":false,
         "directAccessGrantsEnabled":true,
         "serviceAccountsEnabled":true,
         "publicClient":false,
         "frontchannelLogout":false,
         "protocol":"openid-connect",
         "attributes":{
            "saml.assertion.signature":"false",
            "id.token.as.detached.signature":"false",
            "saml.force.post.binding":"false",
            "saml.multivalued.roles":"false",
            "saml.encrypt":"false",
            "oauth2.device.authorization.grant.enabled":"false",
            "saml.server.signature":"false",
            "backchannel.logout.revoke.offline.tokens":"false",
            "saml.server.signature.keyinfo.ext":"false",
            "use.refresh.tokens":"true",
            "exclude.session.state.from.auth.response":"false",
            "oidc.ciba.grant.enabled":"false",
            "saml.artifact.binding":"false",
            "backchannel.logout.session.required":"false",
            "client_credentials.use_refresh_token":"false",
            "saml_force_name_id_format":"false",
            "saml.client.signature":"false",
            "tls.client.certificate.bound.access.tokens":"false",
            "saml.authnstatement":"false",
            "display.on.consent.screen":"false",
            "saml.onetimeuse.condition":"false"
         },
         "authenticationFlowBindingOverrides":{
            
         },
         "fullScopeAllowed":true,
         "nodeReRegistrationTimeout":-1,
         "protocolMappers":[
            {
               "name":"client-roles-mapper",
               "protocol":"openid-connect",
               "protocolMapper":"oidc-usermodel-client-role-mapper",
               "consentRequired":false,
               "config":{
                  "multivalued":"true",
                  "userinfo.token.claim":"true",
                  "id.token.claim":"true",
                  "access.token.claim":"true",
                  "claim.name":"roles",
                  "usermodel.clientRoleMapping.clientId":"{project-unique-key}-forms-flow-web"
               }
            },
            {
               "name":"Client ID",
               "protocol":"openid-connect",
               "protocolMapper":"oidc-usersessionmodel-note-mapper",
               "consentRequired":false,
               "config":{
                  "user.session.note":"clientId",
                  "userinfo.token.claim":"true",
                  "id.token.claim":"true",
                  "access.token.claim":"true",
                  "claim.name":"clientId",
                  "jsonType.label":"String"
               }
            },
            {
               "name":"Client Host",
               "protocol":"openid-connect",
               "protocolMapper":"oidc-usersessionmodel-note-mapper",
               "consentRequired":false,
               "config":{
                  "user.session.note":"clientHost",
                  "userinfo.token.claim":"true",
                  "id.token.claim":"true",
                  "access.token.claim":"true",
                  "claim.name":"clientHost",
                  "jsonType.label":"String"
               }
            },
            {
               "name":"username",
               "protocol":"openid-connect",
               "protocolMapper":"oidc-usermodel-property-mapper",
               "consentRequired":false,
               "config":{
                  "userinfo.token.claim":"true",
                  "user.attribute":"username",
                  "id.token.claim":"true",
                  "access.token.claim":"true",
                  "claim.name":"preferred_username",
                  "jsonType.label":"String"
               }
            },
            {
               "name":"formsflow-bpm-mapper",
               "protocol":"openid-connect",
               "protocolMapper":"oidc-audience-mapper",
               "consentRequired":false,
               "config":{
                  "included.client.audience":"{project-unique-key}-forms-flow-bpm",
                  "id.token.claim":"false",
                  "access.token.claim":"true",
                  "included.custom.audience":"{project-unique-key}-forms-flow-bpm",
                  "userinfo.token.claim":"false"
               }
            },
            {
               "name":"formsflow-web-mapper",
               "protocol":"openid-connect",
               "protocolMapper":"oidc-audience-mapper",
               "consentRequired":false,
               "config":{
                  "included.client.audience":"{project-unique-key}-forms-flow-web",
                  "id.token.claim":"false",
                  "access.token.claim":"true",
                  "included.custom.audience":"{project-unique-key}-forms-flow-web",
                  "userinfo.token.claim":"false"
               }
            },
            {
               "name":"Client IP Address",
               "protocol":"openid-connect",
               "protocolMapper":"oidc-usersessionmodel-note-mapper",
               "consentRequired":false,
               "config":{
                  "user.session.note":"clientAddress",
                  "userinfo.token.claim":"true",
                  "id.token.claim":"true",
                  "access.token.claim":"true",
                  "claim.name":"clientAddress",
                  "jsonType.label":"String"
               }
            }
         ],
         "defaultClientScopes":[
            "web-origins",
            "roles",
            "profile",
            "email"
         ],
         "optionalClientScopes":[
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
         ]
      },
      {
         "clientId":"{project-unique-key}-forms-flow-web",
         "description":"React based FormIO web components",
         "surrogateAuthRequired":false,
         "enabled":true,
         "alwaysDisplayInConsole":false,
         "clientAuthenticatorType":"client-secret",
         "redirectUris":[
            "{web_url}/*"
         ],
         "webOrigins":[
            "{web_url}"
         ],
         "notBefore":0,
         "bearerOnly":false,
         "consentRequired":false,
         "standardFlowEnabled":true,
         "implicitFlowEnabled":false,
         "directAccessGrantsEnabled":true,
         "serviceAccountsEnabled":false,
         "publicClient":true,
         "frontchannelLogout":false,
         "protocol":"openid-connect",
         "attributes":{
            "saml.assertion.signature":"false",
            "id.token.as.detached.signature":"false",
            "saml.force.post.binding":"false",
            "saml.multivalued.roles":"false",
            "saml.encrypt":"false",
            "oauth2.device.authorization.grant.enabled":"false",
            "saml.server.signature":"false",
            "backchannel.logout.revoke.offline.tokens":"false",
            "saml.server.signature.keyinfo.ext":"false",
            "use.refresh.tokens":"true",
            "exclude.session.state.from.auth.response":"false",
            "oidc.ciba.grant.enabled":"false",
            "saml.artifact.binding":"false",
            "backchannel.logout.session.required":"false",
            "client_credentials.use_refresh_token":"false",
            "saml_force_name_id_format":"false",
            "saml.client.signature":"false",
            "tls.client.certificate.bound.access.tokens":"false",
            "saml.authnstatement":"false",
            "display.on.consent.screen":"false",
            "saml.onetimeuse.condition":"false"
         },
         "authenticationFlowBindingOverrides":{
            
         },
         "fullScopeAllowed":true,
         "nodeReRegistrationTimeout":-1,
         "protocolMappers":[
            {
               "name":"camunda-rest-api",
               "protocol":"openid-connect",
               "protocolMapper":"oidc-audience-mapper",
               "consentRequired":false,
               "config":{
                  "included.client.audience":"{project-unique-key}-forms-flow-bpm",
                  "id.token.claim":"false",
                  "access.token.claim":"true",
                  "included.custom.audience":"{project-unique-key}-forms-flow-bpm",
                  "userinfo.token.claim":"false"
               }
            },
            {
               "name":"formsflow-web-mapper",
               "protocol":"openid-connect",
               "protocolMapper":"oidc-audience-mapper",
               "consentRequired":false,
               "config":{
                  "included.client.audience":"{project-unique-key}-forms-flow-web",
                  "id.token.claim":"false",
                  "access.token.claim":"true",
                  "included.custom.audience":"{project-unique-key}-forms-flow-web",
                  "userinfo.token.claim":"false"
               }
            },
            {
               "name":"client-roles-mapper",
               "protocol":"openid-connect",
               "protocolMapper":"oidc-usermodel-client-role-mapper",
               "consentRequired":false,
               "config":{
                  "multivalued":"true",
                  "userinfo.token.claim":"false",
                  "id.token.claim":"false",
                  "access.token.claim":"true",
                  "claim.name":"roles",
                  "usermodel.clientRoleMapping.clientId":"{project-unique-key}-forms-flow-web"
               }
            },
            {
               "name":"Client Attributes Mapper",
               "protocol":"openid-connect",
               "protocolMapper":"oidc-script-based-protocol-mapper",
               "consentRequired":false,
               "config":{
                  "userinfo.token.claim":"true",
                  "multivalued":"true",
                  "id.token.claim":"true",
                  "access.token.claim":"true",
                  "claim.name":"dashboards",
                  "script":"var debug = true\n\nfunction debugOutput(msg) {\n    if (debug) print(\"Debug script mapper: \" + msg);\n}\n\nvar ArrayList = Java.type(\"java.util.ArrayList\");\nvar clientAttributes = new ArrayList();\nvar client = keycloakSession.getContext().getClient();\nvar forEach = Array.prototype.forEach;\nforEach.call(user.getClientRoleMappings(client).toArray(), function(roleModel) {\n    if (roleModel.getAttributes().get(\"dashboards\")) {\n        forEach.call(roleModel.getAttributes().get(\"dashboards\"), function(dashboard){\n            clientAttributes.add(dashboard);\n        });\n    }\n  \n});\n\ndebugOutput('final \"clientAttributes\" array ' + clientAttributes);\nexports = clientAttributes;\n"
               }
            }
         ],
         "defaultClientScopes":[
            "web-origins",
            "roles",
            "profile",
            "email"
         ],
         "optionalClientScopes":[
            "address",
            "phone",
            "offline_access",
            "microprofile-jwt"
         ]
      }
   ],
   "ifResourceExists":"FAIL"
}