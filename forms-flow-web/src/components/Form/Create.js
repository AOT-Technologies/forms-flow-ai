
import React from "react";
import { connect } from "react-redux";
import { saveForm, selectError, FormEdit, Errors } from "react-formio";
import { push } from "connected-react-router";
import { Translation } from "react-i18next";
import { SUBMISSION_ACCESS } from "../../constants/constants";
import { addHiddenApplicationComponent } from "../../constants/applicationComponent";

const Create = React.memo((props) => {
  return (
    <div>
      <h2><Translation>{(t)=>t("create_form")}</Translation></h2>
      <hr />
      <Errors errors={props.errors} />
      <FormEdit options={{
							language: 'ch',
							i18n: {
							  en: {
                'Text Field':'Text Field',
                'Text Area':'Text Area',
                'Number':'Number',
                'Password':'Password',
                'Checkbox':'Checkbox',
                'Select Boxes':'Select Boxes',
                'Select':'Select',
                'Radio':'Radio',
                'Button':'Button',
                'Text Area With Analytics':'Text Area With Analytics',
                'Data':'Data',
                'Display':'Display',
								'Submit': 'Submit',
                'Email':'Email',
                'Url':'Url',
                'Phone Number':'Phone Number',
                'Tags':'Tags',
                'Address':'Address',
                'Date / Time':'Date / Time',
                'Day':'Day',
                'Time':'Time',
                'Currency':'Currency',
                'Survey':'Survey',
                'Signature':'Signature',
                'HTML':'HTML',
                'Content':'Content',
                'Columns':'Columns',
                'Field Set':'Field Set',
                'Panel':'Panel',
                'Table':'Table',
                'Tabs':'Tabs',
                'Well':'Well',
                'Hidden':'Hidden',
                'Container':'Container',
                'Data Map':'Data Map',
                'Data Grid':'Data Grid',
                'Edit Grid':'Edit Grid',
                'Tree':'Tree',
                'reCAPTCHA':'reCAPTCHA',
                'Resource':'Resource',
                'File':'File',
                'Nested':'Nested',
                'Custom':'Custom'
							  },
							  ch: {
                  'Text Field':'文本域',
                  'Text Area':'文本区',
                  'Number':'数字',
                  'Password':'密码',
                  'Checkbox':'复选框',
                  'Select Boxes':'选择框',
                  'Select':'选择',
                  'Radio':'收音机',
                  'Button':'按钮',
                  'Text Area With Analytics':'带有分析的文本区域',
                  'Data':'数据',
                  'Display':'展示',
                  'Submit': '提交',
                  'Email':'电子邮件',
                  'Url':'网址',
                  'Phone Number':'电话号码',
                  'Tags':'标签',
                  'Address':'地址',
                  'Date / Time':'约会时间',
                  'Day':'日',
                  'Time':'时间',
                  'Currency':'货币',
                  'Survey':'民意调查',
                  'Signature':'签名',
                  'HTML':'HTML',
                  'Content':'内容',
                  'Columns':'列',
                  'Field Set':'字段集',
                  'Panel':'控制板',
                  'Table':'桌子',
                  'Tabs':'标签',
                  'Well':'好',
                  'Hidden':'隐',
                  'Container':'容器',
                  'Data Map':'数据地图',
                  'Data Grid':'数据网格',
                  'Edit Grid':'编辑网格',
                  'Tree':'树',
                  'reCAPTCHA':'验证码',
                  'Resource':'资源',
                  'File':'文件',
                  'Nested':'嵌套',
                  'Custom':'风俗',
                  'Basic':'基本的',
                  'Advanced':'先进的',
                  'Layout':'布局',
                  'Premium':'优质的',
                  'Drag and Drop a form component':'拖放表单组件',
                  'Preview':'预览',
                  'The minimum length requirement this field must meet.':'此字段必须满足的最小长度要求',
                  'Label':'标签',
                  'The label for this field that will appear next to it.':'此字段旁边将显示的标签。',
                  'Label Position':'标签位置',
                  'Position for the label for this field.':'此字段的标签位置。',
                  'Placeholder':'占位符',
                  'The placeholder text that will appear when this field is empty.':'此字段为空时将显示的占位符文本。',
                  'Description':'描述',
                  'The description is text that will appear below the input field.':'描述是将出现在输入字段下方的文本。',
                  'Tooltip':'工具提示',
                  'Adds a tooltip to the side of this field.':'在此字段的一侧添加工具提示。',
                  'To add a tooltip to this field, enter text here.':'要向该字段添加工具提示，请在此处输入文本。',
                  'Description for this field.':'此字段的说明。',
                  'Prefix':'字首',
                  'Suffix':'后缀',
                  'Widget':'小工具',
                  'The widget is the display UI used to input the value of the field.':'小部件是用于输入字段值的显示 UI。',
                  'Right (Left-aligned)':'右（左对齐）',
                  'Left (Left-aligned)':'左（左对齐）',
                  'Left (Right-aligned)':'左（右对齐）',
                  'Right (Right-aligned)':'右（右对齐）',
                  'Bottom':' 底部',
                  'Component':'零件',
                  'Top':'最佳',
                  'Label Width':'标签宽度',
                  'The width of label on line in percentages.':'在线标签的宽度（以百分比表示）。',
                  'Label Margin':'标签页边距',
                  'The width of label margin on line in percentages.':'线上标签边距的宽度，以百分比表示。',
                  'Rows':'行',
                  'Input Field':'输入字段',
                  'Calendar Picker':'日历选择器',
                  'Select a widget':'选择一个小部件',
                  'Input Mask':'输入掩码',
                  'Widget Settings':'小工具设置',
                  'Allow Multiple Masks':'允许多个掩码',
                  'Input Masks':'输入掩码',
                  'Mask':'面具',
                  'Add Another':'加上另一个',
                  'Custom CSS Class':'自定义 CSS 类',
                  'Custom CSS class to add to this component.':'要添加到此组件的自定义 CSS 类。',
                  'Tab Index':'标签索引',
                  'Sets the tabindex attribute of this component to override the tab order of the form. See the MDN documentation on tabindex for more information.':'设置此组件的 tabindex 属性以覆盖表单的 Tab 键顺序。有关更多信息，请参阅有关 tabindex 的 MDN 文档。',
                  'Autocomplete':'自动完成',
                  'Indicates whether input elements can by default have their values automatically completed by the browser. See the MDN documentation on autocomplete for more information.':'指示默认情况下输入元素是否可以由浏览器自动完成其值。有关更多信息，请参阅有关自动完成的 MDN 文档。',
                  'A hidden field is still a part of the form, but is hidden from view.':'隐藏字段仍然是表单的一部分，但在视图中是隐藏的。',
                  'Hide Label':'隐藏标签',
                  'Show Word Counter':'显示字计数器',
                  'Show a live count of the number of words.':'显示字数的实时计数。',
                  'Hide the label (title, if no label) of this component. This allows you to show the label in the form builder, but not when it is rendered.':'隐藏该组件的标签（标题，如果没有标签）。这允许您在表单构建器中显示标签，但在呈现时不显示',
                  'Show Character Counter':'显示字符计数器',
                  'Show a live count of the number of characters.':'显示字符数的实时计数。',
                  'Hide Input':'隐藏输入',
                  'Hide the input in the browser. This does not encrypt on the server. Do not use for passwords.':'在浏览器中隐藏输入。这不会在服务器上加密。不要用于密码。',
                  'Initial Focus':'初始焦点',
                  'Make this field the initially focused element on this form.':'使该字段成为此表单上最初关注的元素。',
                  'Allow Spellcheck':'允许拼写检查',
                  'Disabled':'残障人士',
                  'Disable the form input.':'禁用表单输入。',
                  'Table View':'表格视图',
                  'Shows this value within the table view of the submissions.':'在提交的表格视图中显示此值。',
                  'Modal Edit':'模态编辑',
                  'Opens up a modal to edit the value of this component.':'打开一个模式来编辑这个组件的值。',
                  'Multiple Values':'多个值',
                  'Allows multiple values to be entered for this field.':'允许为此字段输入多个值。',
                  'Default Value':'默认值',
                  'The will be the value for this field, before user interaction. Having a default value will override the placeholder text.':'将是用户交互之前该字段的值。具有默认值将覆盖占位符文本。',
                  'Persistent':'执着的',
                  'A persistent field will be stored in database when the form is submitted.':'提交表单时，持久性字段将存储在数据库中。',
                  'None':'没有任何',
                  'Server':'服务器',
                  'Client':'客户',
                  'Input Format':'输入格式',
                  'Force the output of this field to be sanitized in a specific format.':'强制以特定格式清理此字段的输出。',
                  'Plain':'清楚的',
                  'Type to search':'输入搜索',
                  'Raw (Insecure)':'原始（不安全）',
                  'Protected':'受保护',
                  'A protected field will not be returned when queried via API.':'通过 API 查询时不会返回受保护的字段。',
                  'Database Index':'数据库索引',
                  'Set this field as an index within the database. Increases performance for submission queries.':'将此字段设置为数据库中的索引。提高提交查询的性能。',
                  'Text Case':'文本大小写',
                  'When data is entered, you can change the case of the value.':'输入数据时，可以更改值的大小写。',
                  'Mixed (Allow upper and lower case)':'混合（允许大小写）',
                  'Uppercase':'大写',
                  'Lowercase':'小写',
                  'Encrypted (Enterprise Only)':'加密（仅限企业）',
                  'Encrypt this field on the server. This is two way encryption which is not suitable for passwords.':'在服务器上加密此字段。这是不适合密码的双向加密。',
                  'Redraw On':'重绘',
                  'Redraw this component if another component changes. This is useful if interpolating parts of the component like the label.':'如果另一个组件发生变化，则重绘该组件。如果插入组件的部分（如标签），这很有用。',
                  'Any Change':'任何改变',
                  'Clear Value When Hidden':'隐藏时清除值',
                  'When a field is hidden, clear the value.':'隐藏字段时，清除该值。',
                  'The following variables are available in all scripts.':'以下变量在所有脚本中都可用。',
                  'Custom Default Value':'自定义默认值',
                  'form':'形式',
                  'The complete form JSON object':'完整的表单 JSON 对象',
                  'submission':'提交',
                  '	The complete submission object.':'完整的提交对象。',
                  'data':'数据',
                  'The complete submission data object.':'完整的提交数据对象。',
                  'row':'排',
                  'Contextual "row" data, used within DataGrid, EditGrid, and Container components':'上下文“行”数据，在 DataGrid、EditGrid 和 Container 组件中使用',
                  'component':'零件',
                  'The current component JSON':'当前组件 JSON',
                  'instance':'实例',
                  'The current component instance.':'当前组件实例。',
                  'value':'价值',
                  'The current value of the component.':'组件的当前值。',
                  'moment':'片刻',
                  'The moment.js library for date manipulation.':'用于日期操作的 moment.js 库。',
                  'utils':'实用程序',
                  'util':'实用程序',
                  'An alias for "utils".':'“utils”的别名。',
                  'JavaScript':'JavaScript',
                  'Enter custom javascript code.':'输入自定义 JavaScript 代码。',
                  'Example:':'例子：',
                  //'value':'价值',
                  'JSONLogic':'JSON逻辑',
                  'Execute custom logic using ':'使用执行自定义逻辑',
                  'support is provided using an "_" before each operation, such as {"_sum": {var: "data.a"}}':'在每个操作之前使用“_”提供支持，例如 {"_sum": {var: "data.a"}}',
                  'Full':'满的',
                  'Calculated Value':'计算值',
                  'token':'令牌',
                  'The decoded JWT token for the authenticated user.':'经过身份验证的用户的解码 JWT 令牌。',
                  'The complete submission object.':'完整的提交对象。',
                  'Calculate Value on server':'在服务器上计算值',
                  'Checking this will run the calculation on the server. This is useful if you wish to override the values submitted with the calculations performed on the server.':'选中此项将在服务器上运行计算。如果您希望使用在服务器上执行的计算来覆盖提交的值，这将很有用。',
                  'Allow Manual Override of Calculated Value':'允许手动覆盖计算值',
                  'When checked, this will allow the user to manually override the calculated value.':'选中后，这将允许用户手动覆盖计算值。',
                  //'Calculate Value on server':'在服务器上计算值',
                  'Save':'保存',
                  'Cancel':'取消',
                  'Remove':'消除',
                  'Validate On':'验证开启',
                  'Determines when this component should trigger front-end validation.':'确定此组件何时应触发前端验证。',
                  'Change':'改变',
                  'Blur':'模糊',
                  'Required':'必需的',
                  'A required field must be filled in before the form can be submitted.':'必须先填写必填字段，然后才能提交表格。',
                  'Unique':'独特的',
                  'Makes sure the data submitted for this field is unique, and has not been submitted before.':'确保为此字段提交的数据是唯一的，并且之前没有提交过。',
                  'Minimum Length':'最小长度',
                  'The maximum length requirement this field must meet.':'此字段必须满足的最大长度要求。',
                  'Maximum Length':'最大长度',
                  'Minimum Word Length':'最小字长',
                  'The minimum amount of words that can be added to this field.':'可以添加到此字段的最小字数。',
                  'Maximum Word Length':'最大字长',
                  'The maximum amount of words that can be added to this field.':'可以添加到该字段的最大字数。',
                  'Regular Expression Pattern':'正则表达式模式',
                  'The regular expression pattern test that the field value must pass before the form can be submitted.':'表单提交前字段值必须通过的正则表达式模式测试。',
                  'Error Label':'错误标签',
                  'The label for this field when an error occurs.':'发生错误时该字段的标签。',
                  'Custom Error Message':'自定义错误消息',
                  'Error message displayed if any error occurred.':'如果发生任何错误，则会显示错误消息。',
                  'Custom Validation':'自定义验证',
                  'input':'输入',
                  'The value that was input into this component':'输入此组件的值',
                  'Enter custom validation code.':'输入自定义验证码。',
                  'You must assign the valid variable as either true or an error message if validation fails.':'如果验证失败，您必须将有效变量分配为 true 或错误消息。',
                  'Secret Validation':'秘密验证',
                  'Check this if you wish to perform the validation ONLY on the server side. This keeps your validation logic private and secret.':'如果您希望仅在服务器端执行验证，请选中此项。这使您的验证逻辑保持私密和保密。',
                  'JSONLogic Validation':'JSON逻辑验证',
                  'Execute custom logic using':'使用执行自定义逻辑',
                  'Help':'帮助',
                  'Validation':'验证',
                  'API':'API',
                  'Property Name':'属性名称',
                  'The name of this field in the API endpoint.':'API 端点中此字段的名称。',
                  'Field Tags':'字段标签',
                  'Tag the field for use in custom logic.':'标记字段以在自定义逻辑中使用。',
                  'Custom Properties':'自定义属性',
                  'This allows you to configure any custom properties for this component.':'这允许您为此组件配置任何自定义属性。',
                  'Key':'钥匙',
                  'Value':'价值',
                  'Conditional':'有条件的',
                  'Simple':'简单的',
                  'This component should Display:':'该组件应显示：',
                  'True':'真的',
                  'False':'错误的',
                  'When the form component:':'当表单组件：',
                  'Submit (submit)':'提交（提交）',
                  'Has the value:':'具有价值：',
                  'Advanced Conditions':'高级条件',
                  
							  }
							}}}{...props} />
    </div>
  );
});

const mapStateToProps = (state) => {
  return {
    form: { display: "form" },
    saveText: <Translation>{(t)=>t("save_preview")}</Translation>,
    errors: selectError("form", state),
  };
};

const mapDispatchToProps = (dispatch, ownProps) => {
  return {
    saveForm: (form) => {
      form = addHiddenApplicationComponent(form);
      const newForm = {
        ...form,
        tags: ["common"],
      };
      newForm.submissionAccess = SUBMISSION_ACCESS;
      dispatch(
        saveForm("form", newForm, (err, form) => {
          if (!err) {
            // ownProps.setPreviewMode(true);
            dispatch(push(`/formflow/${form._id}/view-edit/`));
          }
        })
      );
    },
  };
};

export default connect(mapStateToProps, mapDispatchToProps)(Create);
