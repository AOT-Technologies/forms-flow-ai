{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "annotations": {
      "description": "Deployment template for a form-io core api service.",
      "tags": "${NAME}-${TAG_NAME}"
    },
    "name": "${NAME}-${TAG_NAME}-deploy"
  },
  "objects": [
  {
    "kind": "DeploymentConfig",
    "apiVersion": "v1",
    "metadata": {
      "name": "${NAME}-${TAG_NAME}",
      "labels": {
        "app": "${NAME}-${TAG_NAME}",
        "app-group": "${APP_GROUP}",
        "template": "${NAME}-deploy"
      }
    },
    "spec": {
      "strategy": {
        "type": "Rolling",
        "rollingParams": {
          "updatePeriodSeconds": 1,
          "intervalSeconds": 1,
          "timeoutSeconds": 600,
          "maxUnavailable": "25%",
          "maxSurge": "25%"
        }
      },
      "triggers": [
      {
        "type": "ImageChange",
        "imageChangeParams": {
          "automatic": true,
          "containerNames": [
            "${NAME}-${TAG_NAME}"
          ],
          "from": {
            "kind": "ImageStreamTag",
            "namespace": "${IMAGE_NAMESPACE}",
            "name": "${NAME}:${TAG_NAME}"
          }
        }
      },
      {
        "type": "ConfigChange"
      }
      ],
      "replicas": "${REPLICAS}",
      "test": false,
      "selector": {
        "app": "${NAME}-${TAG_NAME}",
        "deploymentconfig": "${NAME}-${TAG_NAME}"
      },
      "template": {
        "metadata": {
          "labels": {
            "app": "${NAME}-${TAG_NAME}",
            "app-group": "${APP_GROUP}",
            "deploymentconfig": "${NAME}-${TAG_NAME}",
            "template": "${NAME}-deploy"
          }
        },
        "spec": {
          "containers": [
          {
            "name": "${NAME}-${TAG_NAME}",
            "image": "docker-registry.default.svc:5000/${IMAGE_NAMESPACE}/${NAME}:${TAG_NAME}",
            "ports": [
            {
              "containerPort": 3001,
              "protocol": "TCP"
            }
            ],
            "envFrom": [
            {
              "configMapRef": {
                "name": "${NAME}-${TAG_NAME}-config"
              }
            }
            ],
            "env": [
            {
              "name": "MONGO_INITDB_ROOT_USERNAME",
              "valueFrom": {
                "configMapKeyRef": {
                  "name": "${DATABASE_NAME}-${TAG_NAME}-config",
                  "key": "MONGO_INITDB_ROOT_USERNAME"
                }
              }
            },
            {
              "name": "MONGO_INITDB_ROOT_PASSWORD",
              "valueFrom": {
                "secretKeyRef": {
                  "name": "${DATABASE_NAME}-${TAG_NAME}-secret",
                  "key": "database-password"
                }
              }
            },
            {
              "name": "MONGO_INITDB_DATABASE",
              "valueFrom": {
                "configMapKeyRef": {
                  "name": "${DATABASE_NAME}-${TAG_NAME}-config",
                  "key": "DATABASE_NAME"
                }
              }
            },
            {
              "name": "NODE_CONFIG",
              "valueFrom": {
                "secretKeyRef": {
                  "key": "NODE_CONFIG",
                  "name": "mongodb-formio-core-dev-secret"
                }
              }
            },
            {
              "name": "NO_INSTALL",
              "value":  "true"
            },
            {
              "name": "DEBUG",
              "value":  "formio:*"
            },
            {
              "name": "ROOT_EMAIL",
              "value":  "admin@example.com"
            },
            {
              "name": "ROOT_PASSWORD",
              "value":  "CHANGEME"
            }
            ],
            "resources": {
              "requests": {
                "cpu": "${CPU_REQUEST}",
                "memory": "${MEMORY_REQUEST}"
              },
              "limits": {
                "cpu": "${CPU_LIMIT}",
                "memory": "${MEMORY_LIMIT}"
              }
            },
            "livenessProbe": {
              "tcpSocket": {
                "path": "/ops/healthz",
                "port": 3001,
                "scheme": "HTTP"
              },
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "readinessProbe": {
              "tcpSocket": {
                "path": "/ops/readyz",
                "port": 3001,
                "scheme": "HTTP"
              },
              "timeoutSeconds": 1,
              "periodSeconds": 10,
              "successThreshold": 1,
              "failureThreshold": 3
            },
            "terminationMessagePath": "/dev/termination-log",
            "terminationMessagePolicy": "File",
            "imagePullPolicy": "Always"
          }
          ],
          "restartPolicy": "Always",
          "terminationGracePeriodSeconds": 30,
          "dnsPolicy": "ClusterFirst",
          "securityContext": {},
          "schedulerName": "default-scheduler"
        }
      }
    }
  },
  {
    "kind": "Service",
    "apiVersion": "v1",
    "metadata": {
      "name": "${NAME}-${TAG_NAME}",
      "creationTimestamp": null,
      "labels": {
        "app": "${NAME}-${TAG_NAME}",
        "app-group": "${APP_GROUP}",
        "template": "${NAME}-deploy"
      }
    },
    "spec": {
      "ports": [
      {
        "name": "3001-tcp",
        "protocol": "TCP",
        "port": 3001,
        "targetPort": 3001
      }
      ],
      "selector": {
        "deploymentconfig": "${NAME}-${TAG_NAME}"
      },
      "type": "ClusterIP",
      "sessionAffinity": "None"
    },
    "status": {
      "loadBalancer": {}
    }
  },
  {
    "kind": "Route",
    "apiVersion": "v1",
    "metadata": {
      "name": "${NAME}-${TAG_NAME}",
      "labels": {
        "app": "${NAME}-${TAG_NAME}",
        "app-group": "${APP_GROUP}",
        "template": "${NAME}-deploy"
      }
    },
    "spec": {
      "host": "${NAME}-${TAG_NAME}.pathfinder.gov.bc.ca",
      "to": {
        "kind": "Service",
        "name": "${NAME}-${TAG_NAME}",
        "weight": 100
      },
      "port": {
        "targetPort": "3001-tcp"
      },
      "tls": {
        "termination": "edge"
      },
      "wildcardPolicy": "None"
    },
    "status": {
      "ingress": [
      {
        "host": "${NAME}-${TAG_NAME}.pathfinder.gov.bc.ca",
        "routerName": "router",
        "conditions": [
        {
          "type": "Admitted",
          "status": "True"
        }
        ],
        "wildcardPolicy": "None"
      }
      ]
    }
  }
  ],
  "parameters": [
  {
    "name": "NAME",
    "displayName": "Name",
    "description": "The name assigned to all of the OpenShift resources associated to the server instance.",
    "required": true,
    "value": "formio-core-api"
  },
  {
    "name": "APP_GROUP",
    "displayName": "App Group",
    "description": "The name assigned to all of the deployments in this project.",
    "required": true,
    "value": "formio-core"
  },
  {
    "name": "IMAGE_NAMESPACE",
    "displayName": "Image Namespace",
    "required": true,
    "description": "The namespace of the OpenShift project containing the imagestream for the application.",
    "value": "vmvfjv-tools"
  },
  {
    "name": "TAG_NAME",
    "displayName": "Environment TAG name",
    "description": "The TAG name for this environment, e.g., dev, test, prod",
    "required": true,
    "value": "dev"
  },
  {
    "name": "DATABASE_NAME",
    "displayName": "Database App Name",
    "description": "A valid database app name used by the service.",
    "required": true,
    "value": "mongodb-formio-core"
  },
  {
    "name": "CPU_REQUEST",
    "displayName": "Resources CPU Request",
    "description": "The resources CPU request (in cores) for this build.",
    "required": true,
    "value": "100m"
  },
  {
    "name": "CPU_LIMIT",
    "displayName": "Resources CPU Limit",
    "description": "The resources CPU limit (in cores) for this build.",
    "required": true,
    "value": "750m"
  },
  {
    "name": "MEMORY_REQUEST",
    "displayName": "Resources Memory Request",
    "description": "The resources Memory request (in Mi, Gi, etc) for this build.",
    "required": true,
    "value": "100Mi"
  },
  {
    "name": "MEMORY_LIMIT",
    "displayName": "Resources Memory Limit",
    "description": "The resources Memory limit (in Mi, Gi, etc) for this build.",
    "required": true,
    "value": "2Gi"
  },
  {
    "name": "REPLICAS",
    "displayName": "The number of replicas to run",
    "description": "The number of replicas to run in this environment.",
    "required": true,
    "value": "1"
  }
  ]
}
