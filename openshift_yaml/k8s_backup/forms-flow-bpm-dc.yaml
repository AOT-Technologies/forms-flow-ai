apiVersion: v1
kind: Template
metadata:
  name: forms-flow-bpm
objects:
  - apiVersion: v1
    data:
      mail-config.properties: |
        # send mails via SMTP
        mail.transport.protocol=smtp
        mail.smtp.host=${SMTP_SERVER}
        mail.smtp.port=25
        mail.smtp.auth=false
        mail.smtp.ssl.enable=false
        #mail.smtp.socketFactory.port=465
        #mail.smtp.socketFactory.class=javax.net.ssl.SSLSocketFactory
        # poll mails via IMAPS
        #mail.store.protocol=imaps
        # mail.imaps.host=imap.gmail.com
        #mail.imaps.port=993
        #mail.imaps.timeout=10000
        # additional config
        #mail.poll.folder=INBOX
        mail.sender=donotreply@gov.bc.ca
        mail.sender.alias=DoNotReply
        mail.attachment.download=true
        mail.attachment.path=attachments
        # credentials
        mail.user=
        mail.password=
    kind: ConfigMap
    metadata:
      labels:
        app: ${NAME}
      name: camunda-mail-setup
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      labels:
        app: ${NAME}
      name: ${NAME}
    spec:
      path: /camunda
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: edge
      to:
        kind: Service
        name: ${NAME}
      wildcardPolicy: None
  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${NAME}
      name: ${NAME}
    spec:
      ports:
        - name: web
          port: 8080
          targetPort: 8080
      selector:
        app: ${NAME}
  - apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      annotations:
      labels:
        app: ${NAME}
      name: ${NAME}
    spec:
      podManagementPolicy: Parallel
      replicas: 1
      selector:
        matchLabels:
          app: ${NAME}
      serviceName: ${NAME}
      template:
        metadata:
          labels:
            app: ${NAME}
        spec:
          affinity:
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                      - key: name
                        operator: In
                        values:
                          - ${NAME}
                  topologyKey: kubernetes.io/hostname
          containers:
            - env:
                - name: JDBC_DRIVER
                  value: ${DATABASE_DRIVER}
                - name: JDBC_URL
                  value: jdbc:postgresql://${DATABASE_SERVICE_NAME}:${DATABASE_PORT}/${DATABASE_NAME}
                - name: JDBC_USER
                  valueFrom:
                    secretKeyRef:
                      key: db_username
                      name: ${NAME}
                - name: JDBC_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      key: db_password
                      name: ${NAME}
                - name: WAIT_FOR
                  value: ${DATABASE_SERVICE_NAME}:${DATABASE_PORT}
                - name: KEYCLOAK_URL
                  value: ${KEYCLOAK_URL}
                - name: KEYCLOAK_URL_REALM
                  valueFrom:
                    secretKeyRef:
                      key: keycloak_realm
                      name: ${NAME}
                - name: KEYCLOAK_CLIENTID
                  valueFrom:
                    secretKeyRef:
                      key: keycloak_clientid
                      name: ${NAME}
                - name: KEYCLOAK_CLIENTSECRET
                  valueFrom:
                    secretKeyRef:
                      key: keycloak_clientsecret
                      name: ${NAME}
                - name: DEBUG
                  value: "False"
                - name: MAIL_CONFIG
                  value: /app/mail-config.properties
                - name: TZ
                  value: UTC
                - name: APP_ROOT_LOG_FLAG
                  value: ${APP_ROOT_LOG_FLAG}
                - name: BPM_HISTORY_LEVEL
                  value: ${BPM_HISTORY_LEVEL}
                - name: CAMUNDA_MAX_POOLSIZE
                  value: ${CAMUNDA_MAX_POOLSIZE}
                - name: SESSION_STORE_TIMEOUT
                  value: ${SESSION_STORE_TIMEOUT}
                - name: CAMUNDA_CONN_TIMEOUT
                  value: ${CAMUNDA_CONN_TIMEOUT}
              image: docker-registry.default.svc:5000/${TOOLS_WORKSPACE}/${NAME}:${IMAGE_TAG}
              imagePullPolicy: Always
              name: ${NAME}
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources:
                limits:
                  cpu: 750m
                  memory: 4Gi
                requests:
                  cpu: 200m
                  memory: 2Gi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
              volumeMounts:
                - mountPath: /app/mail-config.properties
                  name: camunda-mail-volume
                  subPath: mail-config.properties
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          volumes:
            - configMap:
                defaultMode: 420
                items:
                  - key: mail-config.properties
                    path: mail-config.properties
                name: camunda-mail-setup
              name: camunda-mail-volume
      updateStrategy:
        type: RollingUpdate
parameters:
  - name: NAME
    description: The name for all created objects.
    required: true
    value: forms-flow-bpm
  - name: IMAGE_TAG
    description: The image tag to pull for the deployment.
    required: true
  - name: TOOLS_WORKSPACE
    description: The location for your image streams (Tools Workspace).
    required: true
    value: vmvfjv-tools
  - name: SMTP_SERVER
    description: The domain name of the SMTP server for sending emails.
    required: true
  - name: DATABASE_DRIVER
    description: The database driver used to connnect to the persistent storage.
    required: true
    value: org.postgresql.Driver
  - name: DATABASE_SERVICE_NAME
    description: The Service name used to connect to the database.
    required: true
    value: camunda-postgresql-dev
  - name: DATABASE_NAME
    description: The name of the database to connect to.
    required: true
    value: postgres
  - name: DATABASE_PORT
    description: The port that the database is running on.
    required: true
    value: "5432"
  - name: KEYCLOAK_URL
    description: The URL used to connnect to the OIDC provider.
    required: true
  - name: APP_ROOT_LOG_FLAG
    description: The log4j logging level to use for the application logs.
    required: true
    value: INFO
  - name: BPM_HISTORY_LEVEL
    description: The history level used in Camunda BPM.
    required: true
    value: auto
  - name: CAMUNDA_MAX_POOLSIZE
    description: The maximum size of the hikari database connection pool.
    required: true
    value: "20"
  - name: CAMUNDA_CONN_TIMEOUT
    description: The maximum milliseconds to wait for a connection from the pool.
    required: true
    value: "5000"
  - name: SESSION_STORE_TIMEOUT
    description: The spring session timeout for browser connections, in seconds.
    required: true
    value: "28800"
